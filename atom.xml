<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[AppliedCode]]></title>
  <link href="http://appliedcode.github.io/atom.xml" rel="self"/>
  <link href="http://appliedcode.github.io/"/>
  <updated>2014-09-18T14:53:52+05:30</updated>
  <id>http://appliedcode.github.io/</id>
  <author>
    <name><![CDATA[Mohit Sethi]]></name>
    <email><![CDATA[appliedcode@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a RubyGem]]></title>
    <link href="http://appliedcode.github.io/blog/2014/02/09/creating-a-rubygem/"/>
    <updated>2014-02-09T22:46:00+05:30</updated>
    <id>http://appliedcode.github.io/blog/2014/02/09/creating-a-rubygem</id>
    <content type="html"><![CDATA[<p>In order to create to a gem we need to follow some steps
Step-1. First of all, create a ruby file say hello.rb in lib folder</p>

<pre><code> code of lib/hello.rb
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> class hello
</span><span class='line'>      def self.hi # Static method
</span><span class='line'>           puts "Hello world!"
</span><span class='line'>      end
</span><span class='line'> end</span></code></pre></td></tr></table></div></figure>


<p>Step-2. Next, we need to create a Gem Specification file with name say hello.gemspec</p>

<pre><code> hello.gemspec
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> Gem::Specification.new do |s|
</span><span class='line'>      s.name             = 'hello'
</span><span class='line'>      s.version          = '0.0.0'
</span><span class='line'>      s.date              = '2014-02-08'
</span><span class='line'>      s.summary       = "Hello!"
</span><span class='line'>      s.description    = "A simple hello world gem"
</span><span class='line'>      s.authors         = ["Manish Sethi"]
</span><span class='line'>      s.email             = 'manish@sethis.in'
</span><span class='line'>      s.files               = ["lib/hello.rb"]
</span><span class='line'>      s.homepage    =
</span><span class='line'>                               'http://rubygems.org/gems/hello'
</span><span class='line'>      s.license = 'MIT'
</span><span class='line'> end</span></code></pre></td></tr></table></div></figure>


<p>Step-3. Next, we need to build the specification</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> $ gem build hello.spec</span></code></pre></td></tr></table></div></figure>


<pre><code> This will create a gem file named hello-0.0.0.gem
 Now, we need to install this gem so that it is added to the library of the gem so that we can use this later in                some other programs.

 Command to install gem:
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>      $ gem install hello.0.0.0.gem</span></code></pre></td></tr></table></div></figure>


<pre><code>Verify installation using the command:
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem list hello</span></code></pre></td></tr></table></div></figure>


<p>Step-4. Next, to use this hello gem, create a file named test.rb</p>

<pre><code>  Use this code
     require 'Rubygems'
     require 'hello'
     hello.hi
 # output: Hello World!
</code></pre>

<p> In the way, we had created gem and used in the ruby program to show the result.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Ignore file permissions]]></title>
    <link href="http://appliedcode.github.io/blog/2013/07/29/git-ignore-file-permissions/"/>
    <updated>2013-07-29T16:01:00+05:30</updated>
    <id>http://appliedcode.github.io/blog/2013/07/29/git-ignore-file-permissions</id>
    <content type="html"><![CDATA[<p>If you use git a lot (like me) and very often have to share git repo/directory between machines. Here is how you can make git not to consider file-permission changes as modifications (shown in your <code>git status</code>).</p>

<ul>
<li>Got to repo and execute:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config core.filemode false</span></code></pre></td></tr></table></div></figure>


<ul>
<li>To make it permanent &amp; add to your global config:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global core.filemode false</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrant provider for hpcloud.com]]></title>
    <link href="http://appliedcode.github.io/blog/2013/03/01/vagrant-provider-for-hpcloud-dot-com/"/>
    <updated>2013-03-01T14:42:00+05:30</updated>
    <id>http://appliedcode.github.io/blog/2013/03/01/vagrant-provider-for-hpcloud-dot-com</id>
    <content type="html"><![CDATA[<p><strong>NOTE:</strong> This plugin requires Vagrant 1.1+,</p>

<h2>Features</h2>

<ul>
<li>Boot Servers on HP Cloud</li>
<li>SSH into the instances.</li>
<li>Provision the instances with any built-in Vagrant provisioner.</li>
<li>Minimal synced folder support via <code>rsync</code>.</li>
</ul>


<h2>Usage</h2>

<p>Install using standard Vagrant 1.1+ plugin installation methods. After
installing, <code>vagrant up</code> and specify the <code>hp</code> provider. An example is
shown below.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant plugin install vagrant-hp
</span><span class='line'>...
</span><span class='line'>$ vagrant up --provider=hp
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Of course prior to doing this, you&rsquo;ll need to obtain an HP-compatible
box file for Vagrant.</p>

<h2>Quick Start</h2>

<p>After installing the plugin (instructions above), the quickest way to get
started is to actually use a dummy HP box and specify all the details
manually within a <code>config.vm.provider</code> block. So first, add the dummy
box using any name you want:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant box add dummy https://github.com/mohitsethi/vagrant-hp/raw/master/dummy_hp.box
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>And then make a Vagrantfile that looks like the following, filling in
your information where necessary.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Vagrant.configure("2") do |config|
</span><span class='line'>  config.vm.box = "dummy"
</span><span class='line'>
</span><span class='line'>  config.vm.provider :hp do |rs|
</span><span class='line'>    rs.access_key  = "&lt;hp_access_key&gt;"
</span><span class='line'>    rs.secret_key = "&lt;hp_secret_key&gt;"
</span><span class='line'>    rs.flavor   = "standard.xsmall"
</span><span class='line'>    rs.tenant_id = "&lt;hp_tenant_id&gt;"
</span><span class='line'>    rs.server_name = "&lt;server_name&gt;"
</span><span class='line'>    rs.image    = "Ubuntu Precise 12.04 LTS Server 64-bit 20121026 (b)"
</span><span class='line'>    rs.keypair_name = "&lt;your_key_pair_name_on_hpcloud&gt;"
</span><span class='line'>    rs.ssh_private_key_path = "&lt;private_key_location&gt;"
</span><span class='line'>    rs.ssh_username = "&lt;ssh_username&gt;"
</span><span class='line'>    rs.availability_zone = "az1"
</span><span class='line'>    # Security Groups defaults to ["default"]
</span><span class='line'>    # rs.security_groups = ["group1", "group2"]
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>And then run <code>vagrant up --provider=hp</code>.</p>

<p>This will start an Ubuntu 12.04 instance in the az1 availability zone within
your HP Cloud account. And assuming your SSH information was filled in properly
within your Vagrantfile, SSH and provisioning will work as well.</p>

<p>Note that normally a lot of this boilerplate is encoded within the box
file, but the box file used for the quick start, the &ldquo;dummy&rdquo; box, has
no preconfigured defaults.</p>

<h2>Box Format</h2>

<p>Every provider in Vagrant must introduce a custom box format. This
provider introduces <code>hp</code> boxes. You can view an example box in
the <a href="https://github.com/mohitsethi/vagrant-hp/tree/master/example_box">example_box/ directory</a>.
That directory also contains instructions on how to build a box.</p>

<p>The box format is basically just the required <code>metadata.json</code> file
along with a <code>Vagrantfile</code> that does default settings for the
provider-specific configuration for this provider.</p>

<h2>Configuration</h2>

<p>This provider exposes quite a few provider-specific configuration options:</p>

<ul>
<li><code>access_key</code> &ndash; The access key for accessing HP Cloud</li>
<li><code>image</code> &ndash; The Image-id  or Image-Name to boot, such as
  &ldquo;Ubuntu Precise 12.04 LTS Server 64-bit 20121026 (b)&rdquo;</li>
<li><code>availability_zone</code> &ndash; The availability zone to launch the server.
  If nil, it will use &lsquo;az1&rsquo;.</li>
<li><code>flavor</code> &ndash; The type of flavor, such as &ldquo;standard.xsmall&rdquo;</li>
<li><code>keypair_name</code> &ndash; The name of the keypair to use to bootstrap image
 which support it.</li>
<li><code>secret_key</code> &ndash; The secret access key for accessing HP Cloud.</li>
<li><code>ssh_private_key_path</code> &ndash; The path to the SSH private key. This overrides
<code>config.ssh.private_key_path</code>.</li>
<li><code>ssh_username</code> &ndash; The SSH username, which overrides <code>config.ssh.username</code>.</li>
<li><code>server_name</code> &ndash; The name of the server provisioned on HP Cloud.</li>
<li><code>tenant_id</code> &ndash; The tenant_id to launch the server.</li>
<li><code>security_groups</code> &ndash; An array of strings defining the security groups in which this VM is included.</li>
</ul>


<p>These can be set like typical provider-specific configuration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># ... other stuff</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:hp</span> <span class="k">do</span> <span class="o">|</span><span class="n">rs</span><span class="o">|</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">access_key</span>  <span class="o">=</span> <span class="s2">&quot;&lt;hp_access_key&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">secret_key</span> <span class="o">=</span> <span class="s2">&quot;&lt;hp_secret_key&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">flavor</span>   <span class="o">=</span> <span class="s2">&quot;standard.xsmall&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">tenant_id</span> <span class="o">=</span> <span class="s2">&quot;&lt;hp_tenant_id&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">server_name</span> <span class="o">=</span> <span class="s2">&quot;&lt;server_name&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">image</span>    <span class="o">=</span> <span class="s2">&quot;Ubuntu Precise 12.04 LTS Server 64-bit 20121026 (b)&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">keypair_name</span> <span class="o">=</span> <span class="s2">&quot;&lt;your_key_pair_name_on_hpcloud&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">ssh_private_key_path</span> <span class="o">=</span> <span class="s2">&quot;&lt;private_key_location&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">ssh_username</span> <span class="o">=</span> <span class="s2">&quot;&lt;ssh_username&gt;&quot;</span>
</span><span class='line'>    <span class="n">rs</span><span class="o">.</span><span class="n">availability_zone</span> <span class="o">=</span> <span class="s2">&quot;az1&quot;</span>
</span><span class='line'>    <span class="c1"># Security Groups defaults to [&quot;default&quot;]</span>
</span><span class='line'>    <span class="c1"># rs.security_groups = [&quot;group1&quot;, &quot;group2&quot;]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Networks</h2>

<p>Networking features in the form of <code>config.vm.network</code> are not
supported with <code>vagrant-hp</code>, currently. If any of these are
specified, Vagrant will emit a warning, but will otherwise boot
the HP machine.</p>

<h2>Synced Folders</h2>

<p>There is minimal support for synced folders. Upon <code>vagrant up</code>,
<code>vagrant reload</code>, and <code>vagrant provision</code>, the HP provider will use
<code>rsync</code> (if available) to uni-directionally sync the folder to
the remote machine over SSH.</p>

<p>This is good enough for all built-in Vagrant provisioners (shell,
chef, and puppet) to work!</p>

<h2>Development</h2>

<p>To work on the <code>vagrant-hp</code> plugin, clone this repository out, and use
<a href="http://gembundler.com">Bundler</a> to get the dependencies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once you have the dependencies, verify the unit tests pass with <code>rake</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span>
</span></code></pre></td></tr></table></div></figure>


<p>If those pass, you&rsquo;re ready to start developing the plugin. You can test
the plugin without installing it into your Vagrant environment by just
creating a <code>Vagrantfile</code> in the top level of this directory (it is gitignored)
that uses it, and uses bundler to execute Vagrant:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">vagrant</span> <span class="n">up</span> <span class="o">--</span><span class="n">provider</span><span class="o">=</span><span class="n">hp</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Event Report:- February 2nd 2012:- Openstack talks at Manipal University]]></title>
    <link href="http://appliedcode.github.io/2013/02/event-report-february-2nd-2012.html"/>
    <updated>2013-02-04T18:40:00+05:30</updated>
    <id>http://appliedcode.github.io/2013/02/event-report-february-2nd-2012</id>
    <content type="html"><![CDATA[<p>On February 2, 2013, first in the series of <a href="http://openstack.org/">Openstack</a> talks was organized at <a href="http://www.manipal.edu/Institutions/Engineering/MIT/Pages/Welcome.aspx">Manipal Institute of Technology</a>. It was attended by around 40 students &amp; faculty from BE &amp; M-Tech courses.</p>

<p>  <img src="http://3.bp.blogspot.com/-5qkvCDurONE/UQ-yTyx-4nI/AAAAAAAAAkc/IDxBp8j8OOI/s640/DSC_0048+-+Copy.JPG" alt="" /></p>

<p>The event was started with general introductory session with few minutes on establishing the goals of talk.</p>

<p>Rahul Krishna Upadhyaya ( <a href="https://twitter.com/RahulKrishnaUp">@RahulKrishnaUp</a>) gave an presentation on Virtualization, Cloud, &amp; Introduction to Openstack,</p>

<p>  <img src="http://1.bp.blogspot.com/-4nEmKJELZ-8/UQ-yk9ve6zI/AAAAAAAAAkk/s0uo00E_eSg/s640/DSC_0014+-+Copy.JPG" alt="" /></p>

<p>Mohit Sethi ( <a href="http://twitter.com/mohitsethi">@mohitsethi</a>) explained how to contribute to Openstack. Also gave a presentation of conceptual foundation of DevOpos along with how to  use  <a href="http://www.opscode.com/chef/">Chef</a>  for deployment and development of Openstack with a live demo.</p>

<p>  <img src="http://2.bp.blogspot.com/-rLAGTlRdGa0/USPrkilWkYI/AAAAAAAACZY/ME1WqZEJcY4/s640/DSC_0038.JPG" alt="" /></p>

<p>Thanks to management of Manipal Institute of Technology,Manipal University for hosting the talks.</p>

<p>Special mention of thanks to Dr. Manohara Pai M. M. (Associate Director-Innovation Center, Manipal University) and Dr. Preetham Kumar (Head - Department of Information &amp; Communication Technology) for all the support.</p>

<p>Complete photo-set of the event are available <a href="http://goo.gl/2tGGI">http://goo.gl/2tGGI</a>,</p>
]]></content>
  </entry>
  
</feed>
